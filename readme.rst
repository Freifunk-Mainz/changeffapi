ffflash
=======

This Program helps to manage `Freifunk APIfiles <https://api.freifunk.net/>`_.

To use it you need an existing APIfile. `Create one here <http://freifunk.net/api-generator/>`_ if necessary.


Commandline
-----------

There is no configuration.

Everything **ffflash** needs to know is passed each time as shell parameters. (It's not much).

* To get help, use ``ffflash.py -h``::

    ffflash APIfile [-h] [-n NODELIST] [-s SIDECARS [SIDECARS ...]] [-d] [-v]

* You always need to pass the location to your ``APIfile``.

* ``--nodelist`` or ``-n`` expects the full url of your ``nodelist.json`` file, generated by the `ffmap-backend <https://github.com/ffnord/ffmap-backend>`_.

* Pass one or more ``--sidecars`` (or ``-s``) to merge content from there into the APIfile (see below).

* Use ``--dry`` (or ``-d``) to preview all changes. Then, nothing is written to the APIfile!

* If both ``-s`` and ``-n`` are omitted, no action is taken. So to just display your APIfile you could use this::

    ffflash.py /path/to/your/ffapi_file.json -d


* The ``--verbose`` (or ``-v``) switch just displays more information.


Nodelist
--------

If a ``--nodelist`` is passed, this url will be fetched to count online Nodes and Clients from there.

If successful, the numbers will be added to the APIfile::

    {
      "state": {
        "nodes": 0,
        "description": ""
      }
    }

Would be changed to this::

    {
      "state": {
        "nodes": 23,
        "description": "[23 Nodes, 42 Clients]"
      }
    }


Sidecars
--------

Use one ore more Sidecars to merge content from there into the APIfile.

Sidecars are either **yaml** or **json** files. This is determined by the extension in the filename.

The filename is a dot-separated path into the keys of the APIfile. If that path does not exist in the APIfile, it will be ignored.

Only if a Sidecar itself does not exist yet or is empty, it will be generated with the contents read from the APIfile.

Assuming this APIfile::

    {
      "support": {
        "club": {
          "name": "Supporter Club",
          "city": "Generic City",
          "street": "Some Street 23",
          "zip": "23425"
        },
        "donations": {
          "bankaccount": {
            "BIC": "ABC123DEFXX",
            "IBAN": "GC13370000000123456789",
            "usage": "I like cash"
          }
        }
      }
    }

Valid filenames and their content would be these:

* ``/path/to/your/sidecars/support.club.city.yaml``::

    Generic City
    ...


* ``/path/to/your/sidecars/support.club.yaml``::

    city: Generic City
    name: Supporter Club
    street: Some Street 23
    zip: '23425'


* ``/path/to/your/sidecars/support.yaml``::

    club:
        city: Generic City
        name: Supporter Club
        street: Some Street 23
        zip: '23425'
    donations:
        bankaccount:
            BIC: ABC123DEFXX
            IBAN: GC13370000000123456789
            usage: I like cash


* ``/path/to/your/sidecars/support.donations.bankaccount.usage.json``::

    "I like cash"

* ``/path/to/your/sidecars/support.donations.bankaccount.json``::

    {
      "BIC": "ABC123DEFXX",
      "IBAN": "GC13370000000123456789",
      "usage": "I like cash"
    }

* ``/path/to/your/sidecars/support.donations.json``::

    {
      "bankaccount": {
        "BIC": "ABC123DEFXX",
        "IBAN": "GC13370000000123456789",
        "usage": "I like cash"
      }
    }

Invalid filenames would be these:

* ``/path/to/your/sidecars/support.club.city.txt``:

    Wrong extension

* ``/path/to/your/sidecars/support.industry.json``:

    Key *industry* is not present in APIfile.

* ``/path/to/your/sidecars/support.donations.bankaccount.iban.yaml``:

    *iban* can't be found, it's case sensitive. Use *IBAN* instead.


Duplicated Sidecar content is handled like this.
Assuming these Sidecars with this content:

* ``support.club.street.yaml``::

    Same Street 5
    ...

* ``support.club.yaml``::

    city: Generic City
    name: Supporter Club
    street: Another Street 42
    zip: '23425'

The List of Sidecars is sorted, so the longer filename is handled first.
So the shorter filename wins, the result is then::

    {
      "support": {
        "club": {
          "name": "Supporter Club",
          "city": "Generic City",
          "street": "Another Street 42",
          "zip": "23425"
        }
    }
